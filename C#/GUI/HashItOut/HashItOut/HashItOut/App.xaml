<Application x:Class="HashItOut.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!-- Button Styles -->
        <Style x:Key="AppTitleButtons" TargetType="RadioButton">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <TextBlock  TextWrapping="Wrap"  Text="{TemplateBinding Content}"  FontFamily="Webdings"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Crimson"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type CheckBox}" x:Key="SelectOption">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="White">
                            <BulletDecorator.Bullet>

                                <Grid Height="18" Width="18">
                                    <!--Define size of the Bullet-->
                                    <Polygon Name="TickMark"
                            Points="4,9 8,15 15,3 8,11 4,9"
                            Stroke="#FF0092B2"
                            StrokeThickness="1"
                            Visibility="Hidden"
                            Fill="Green">
                                    </Polygon>

                                    <Border CornerRadius="3,0,0,3" BorderBrush="#FF565656" BorderThickness="2" />

                                </Grid>
                            </BulletDecorator.Bullet>

                            <!--Text element-->
                            <Border Background="#FF565656" CornerRadius="0,3,3,0" Width="50" Height="18">
                                <TextBlock Margin="3,1,0,0" Foreground="White" FontFamily="Calibri" FontSize="12">
                            <ContentPresenter />
                                </TextBlock>
                            </Border>
                        </BulletDecorator>


                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="TickMark" Property="Visibility" Value="Visible"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type CheckBox}" x:Key="StripSwitch">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator>
                            <!--Text element-->
                            <Border Width="60" Height="20" CornerRadius="3" BorderBrush="#FFE2E2E2" BorderThickness="1">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <!--We don't need any bullet, cause our border is the switching element-->
                                    <Border Margin="5,0,48,0" Background="#FFCDCDCD" CornerRadius="1" Name="RadioMark" />
                                    <!-- To change the apearance to button stripe 2, edit the margins! -->
                                </Grid>

                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0" />
                                        <GradientStop Color="#FFBAD8DE" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </BulletDecorator>

                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Background" Value="Green"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5,3,5,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF316C95" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#cccccc"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#cccccc" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
